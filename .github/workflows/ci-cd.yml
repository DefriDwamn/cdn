name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx1:latest -f ./nginx/Dockerfile ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx1:latest

        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx2:latest -f ./nginx/Dockerfile ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx2:latest

        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-proxy:latest -f ./nginx-proxy/Dockerfile ./nginx-proxy
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx-proxy:latest

        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f ./frontend/Dockerfile ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
        docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
        cd ~/cdn
        docker compose pull
        docker compose up -d --remove-orphans
        EOF
